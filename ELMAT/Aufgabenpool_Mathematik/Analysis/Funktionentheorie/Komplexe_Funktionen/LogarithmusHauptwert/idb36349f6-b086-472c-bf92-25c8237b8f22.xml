<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/qti/qtiv2p1/imsqti_v2p1p1.xsd http://www.w3.org/1998/Math/MathML http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" identifier="idb36349f6-b086-472c-bf92-25c8237b8f22" title="LogarithmusHauptwert" adaptive="false" timeDependent="false"><responseDeclaration identifier="RESPONSE_1416304904238" cardinality="single" baseType="string" /><responseDeclaration identifier="RESPONSE_1416305139105" cardinality="single" baseType="string" /><outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float"><defaultValue><value>0</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="MAXSCORE" cardinality="single" baseType="float"><defaultValue><value>4</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKBASIC" cardinality="single" baseType="identifier" view="testConstructor"><defaultValue><value>empty</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKMODAL" cardinality="multiple" baseType="identifier" view="testConstructor" /><templateDeclaration identifier="a" cardinality="single" baseType="integer" /><templateDeclaration identifier="b" cardinality="single" baseType="integer" /><templateDeclaration identifier="vz" cardinality="single" baseType="string" /><templateDeclaration identifier="c" cardinality="single" baseType="integer" /><templateDeclaration identifier="d" cardinality="single" baseType="integer" /><templateDeclaration identifier="num" cardinality="single" baseType="integer" /><templateDeclaration identifier="denom" cardinality="single" baseType="integer" /><templateDeclaration identifier="z1" cardinality="single" baseType="integer" /><templateDeclaration identifier="vz1" cardinality="single" baseType="string" /><templateDeclaration identifier="vz2" cardinality="single" baseType="string" /><templateDeclaration identifier="z2" cardinality="single" baseType="integer" /><templateDeclaration identifier="r" cardinality="single" baseType="integer" /><templateDeclaration identifier="2r" cardinality="single" baseType="integer" /><templateDeclaration identifier="absr" cardinality="single" baseType="integer" /><templateDeclaration identifier="num1" cardinality="single" baseType="integer" /><templateDeclaration identifier="denom1" cardinality="single" baseType="integer" /><templateDeclaration identifier="radius" cardinality="single" baseType="integer" /><templateProcessing><setTemplateValue identifier="a"><randomInteger min="-7" max="8" /></setTemplateValue><templateCondition><templateIf><match><variable identifier="a" /><baseValue baseType="integer">0</baseValue></match><setTemplateValue identifier="a"><randomInteger min="1" max="9" /></setTemplateValue></templateIf></templateCondition><setTemplateValue identifier="b"><randomInteger min="-7" max="8" /></setTemplateValue><setTemplateValue identifier="vz"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="c"><randomInteger min="1" max="9" /></setTemplateValue><setTemplateValue identifier="d"><randomInteger min="1" max="9" /></setTemplateValue><setTemplateValue identifier="num"><customOperator definition="MAXIMA" value="num(trigreduce(carg(%e^($(1)$(2)/$(3)*%i*%pi)  ))/%pi);"><variable identifier="vz" /><variable identifier="c" /><variable identifier="d" /></customOperator></setTemplateValue><setTemplateValue identifier="denom"><customOperator definition="MAXIMA" value="denom(trigreduce(carg(%e^($(1)$(2)/$(3)*%i*%pi) ))/%pi);"><variable identifier="vz" /><variable identifier="c" /><variable identifier="d" /></customOperator></setTemplateValue><setTemplateValue identifier="z1"><random><multiple><baseValue baseType="integer">3</baseValue><baseValue baseType="integer">1</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="vz1"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="vz2"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="z2"><random><multiple><baseValue baseType="integer">3</baseValue></multiple></random></setTemplateValue><templateCondition><templateIf><match><variable identifier="z1" /><baseValue baseType="integer">3</baseValue></match><setTemplateValue identifier="z2"><customOperator definition="MAXIMA" value="float(1);" /></setTemplateValue></templateIf></templateCondition><setTemplateValue identifier="r"><randomInteger min="-7" max="7" /></setTemplateValue><templateCondition><templateIf><match><variable identifier="r" /><baseValue baseType="integer">0</baseValue></match><setTemplateValue identifier="r"><randomInteger min="1" max="8" /></setTemplateValue></templateIf></templateCondition><setTemplateValue identifier="2r"><customOperator definition="MAXIMA" value="float(2*$(1));"><variable identifier="r" /></customOperator></setTemplateValue><setTemplateValue identifier="absr"><customOperator definition="MAXIMA" value="float(abs($(1)));"><variable identifier="2r" /></customOperator></setTemplateValue><setTemplateValue identifier="num1"><customOperator definition="MAXIMA" value="float(num(trigreduce(carg( $(1)*sqrt($(2))+$(3)$(4)*sqrt($(5))*%i ))/%pi));"><variable identifier="2r" /><variable identifier="z1" /><variable identifier="vz2" /><variable identifier="absr" /><variable identifier="z2" /></customOperator></setTemplateValue><setTemplateValue identifier="denom1"><customOperator definition="MAXIMA" value="float(denom(trigreduce(carg( $(1)*sqrt($(2))+$(3)$(4)*sqrt($(5))*%i ))/%pi));"><variable identifier="2r" /><variable identifier="z1" /><variable identifier="vz2" /><variable identifier="absr" /><variable identifier="z2" /></customOperator></setTemplateValue><setTemplateValue identifier="radius"><customOperator definition="MAXIMA" value="float(2*$(1));"><variable identifier="absr" /></customOperator></setTemplateValue><setCorrectResponse identifier="RESPONSE_1416304904238"><customOperator definition="VARIABLESTRING" value="log($(3)) +($(1)/$(2)*%pi) *%i"><variable identifier="num1" /><variable identifier="denom1" /><variable identifier="radius" /></customOperator></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1416305139105"><customOperator definition="VARIABLESTRING" value="$(1)+($(2)/$(3)*%pi)*%i"><variable identifier="b" /><variable identifier="num" /><variable identifier="denom" /></customOperator></setCorrectResponse></templateProcessing><itemBody ><p><p>Berechne für einige komplexe Zahlen \(z\), den <strong>Hauptwert</strong> \(\bf Log(z)\) exakt in kartesischer Form. Gebe das Ergebnis in der Form a + b i ein.</p><p>Syntax: %i für i    %pi für \(\pi\)    log für \( \ln\)     * für jede Multiplication.</p><p>Beispiel: Für \( \ln (3) + \frac{2\pi}{7} \cdot \mathbb i \) gebe ein:</p><p>log(3) + 2 * %pi / 7 * %i</p><p> </p><p>a.) \(Log ( <printedVariable identifier="2r" />\sqrt{<printedVariable identifier="z1" />}<printedVariable identifier="vz2" /><printedVariable identifier="absr" />\cdot \sqrt{<printedVariable identifier="z2" />}\cdot \mathbb i) \) = <textEntryInteraction responseIdentifier="RESPONSE_1416304904238" expectedLength="10" class="maxima-formula show-latex show-syntax-error" /></p><p>b.) \(Log ( e^{<printedVariable identifier="b" /><printedVariable identifier="vz" />\frac{<printedVariable identifier="c" />}{<printedVariable identifier="d" />}\cdot \pi \cdot \mathbb i} ) \) = <textEntryInteraction responseIdentifier="RESPONSE_1416305139105" expectedLength="11" class="maxima-formula show-latex show-syntax-error" /></p><p>Hinweis für a.): Arg(z) für \(z\) in \(Log(z)\) ist hier ein ganzzahliges Vielfaches von \( \frac{\pi}{6}\) </p><p> </p><p> </p><p> </p></p></itemBody><responseProcessing><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1416304904238" /><correct identifier="RESPONSE_1416304904238" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">2</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1416304904238" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1416305139105" /><correct identifier="RESPONSE_1416305139105" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">2</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1416305139105" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><not><match><variable identifier="FEEDBACKBASIC" /><baseValue baseType="identifier">empty</baseValue></match></not><equal toleranceMode="exact"><variable identifier="SCORE" /><variable identifier="MAXSCORE" /></equal></and><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">correct</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><match><baseValue baseType="identifier">incorrect</baseValue><variable identifier="FEEDBACKBASIC" /></match></and><setOutcomeValue identifier="FEEDBACKMODAL"><multiple><variable identifier="FEEDBACKMODAL" /><baseValue baseType="identifier">Feedback1268344483</baseValue></multiple></setOutcomeValue></responseIf></responseCondition></responseProcessing><modalFeedback  identifier="Feedback1268344483" outcomeIdentifier="FEEDBACKMODAL" showHide="show"><p>Beachte, dass \(Arg(z)\) die Bedingung  \( -\pi \lt Arg(z) \le \pi \) erfüllen muß.</p></modalFeedback></assessmentItem>

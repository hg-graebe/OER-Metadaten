<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/qti/qtiv2p1/imsqti_v2p1p1.xsd http://www.w3.org/1998/Math/MathML http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" identifier="id365b20b8-538c-44a7-9090-115aff5d4e31" title="ReelleNullstellenPolynomGrad3" adaptive="false" timeDependent="false"><responseDeclaration identifier="RESPONSE_1410012695530" cardinality="single" baseType="string" /><outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float"><defaultValue><value>0</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="MAXSCORE" cardinality="single" baseType="float"><defaultValue><value>4</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKBASIC" cardinality="single" baseType="identifier" view="testConstructor"><defaultValue><value>empty</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKMODAL" cardinality="multiple" baseType="identifier" view="testConstructor" /><templateDeclaration identifier="x0" cardinality="single" baseType="integer" /><templateDeclaration identifier="x1" cardinality="single" baseType="integer" /><templateDeclaration identifier="x2" cardinality="single" baseType="integer" /><templateDeclaration identifier="a0" cardinality="single" baseType="integer" /><templateDeclaration identifier="a1" cardinality="single" baseType="integer" /><templateDeclaration identifier="a2" cardinality="single" baseType="integer" /><templateDeclaration identifier="a0abs" cardinality="single" baseType="integer" /><templateDeclaration identifier="a1abs" cardinality="single" baseType="integer" /><templateDeclaration identifier="a2abs" cardinality="single" baseType="integer" /><templateDeclaration identifier="a0sign" cardinality="single" baseType="string" /><templateDeclaration identifier="a1sign" cardinality="single" baseType="string" /><templateDeclaration identifier="a2sign" cardinality="single" baseType="string" /><templateProcessing><setTemplateValue identifier="x0"><randomInteger min="-4" max="5" /></setTemplateValue><templateCondition><templateIf><match><variable identifier="x0" /><baseValue baseType="integer">0</baseValue></match><setTemplateValue identifier="x0"><randomInteger min="1" max="5" /></setTemplateValue></templateIf></templateCondition><setTemplateValue identifier="x1"><randomInteger min="1" max="3" /></setTemplateValue><setTemplateValue identifier="x2"><randomInteger min="1" max="6" /></setTemplateValue><setTemplateValue identifier="a0"><customOperator definition="MAXIMA" value="float(coeff( expand((x-$(1))*(x-$(2))*(x-$(3))), x, 0));"><variable identifier="x0" /><variable identifier="x1" /><variable identifier="x2" /></customOperator></setTemplateValue><setTemplateValue identifier="a1"><customOperator definition="MAXIMA" value="float(coeff( expand((x-$(1))*(x-$(2))*(x-$(3))), x, 1));"><variable identifier="x0" /><variable identifier="x1" /><variable identifier="x2" /></customOperator></setTemplateValue><setTemplateValue identifier="a2"><customOperator definition="MAXIMA" value="float(coeff( expand((x-$(1))*(x-$(2))*(x-$(3))), x, 2));"><variable identifier="x0" /><variable identifier="x1" /><variable identifier="x2" /></customOperator></setTemplateValue><setTemplateValue identifier="a0abs"><customOperator definition="MAXIMA" value="float(abs($(1)));"><variable identifier="a0" /></customOperator></setTemplateValue><setTemplateValue identifier="a1abs"><customOperator definition="MAXIMA" value="float(abs($(1)));"><variable identifier="a1" /></customOperator></setTemplateValue><setTemplateValue identifier="a2abs"><customOperator definition="MAXIMA" value="float(abs($(1)));"><variable identifier="a2" /></customOperator></setTemplateValue><setTemplateValue identifier="a0sign"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="a1sign"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="a2sign"><random><multiple><baseValue baseType="string">+</baseValue><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue><templateCondition><templateIf><gte><variable identifier="a0" /><baseValue baseType="integer">0</baseValue></gte><setTemplateValue identifier="a0sign"><random><multiple><baseValue baseType="string">+</baseValue></multiple></random></setTemplateValue></templateIf><templateElse><setTemplateValue identifier="a0sign"><random><multiple><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue></templateElse></templateCondition><templateCondition><templateIf><gte><variable identifier="a1" /><baseValue baseType="integer">0</baseValue></gte><setTemplateValue identifier="a1sign"><random><multiple><baseValue baseType="string">+</baseValue></multiple></random></setTemplateValue></templateIf><templateElse><setTemplateValue identifier="a1sign"><random><multiple><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue></templateElse></templateCondition><templateCondition><templateIf><gte><variable identifier="a2" /><baseValue baseType="integer">0</baseValue></gte><setTemplateValue identifier="a2sign"><random><multiple><baseValue baseType="string">+</baseValue></multiple></random></setTemplateValue></templateIf><templateElse><setTemplateValue identifier="a2sign"><random><multiple><baseValue baseType="string">-</baseValue></multiple></random></setTemplateValue></templateElse></templateCondition><setCorrectResponse identifier="RESPONSE_1410012695530"><customOperator definition="VARIABLESTRING" value="{$(1), $(2), $(3)}"><variable identifier="x0" /><variable identifier="x1" /><variable identifier="x2" /></customOperator></setCorrectResponse></templateProcessing><itemBody ><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">Man bestimme alle reellen Nullstellen des Polynoms</div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"> </div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">$$p(x) := x^3 <printedVariable identifier="a2sign" /><printedVariable identifier="a2abs" />x^2<printedVariable identifier="a1sign" /><printedVariable identifier="a1abs" />x <printedVariable identifier="a0sign" /><printedVariable identifier="a0abs" />$$.</div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"> </div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">Hinweis: Es sei bekannt, dass $$p$$ eine ganzzahlige Nullstelle $$x_0$$ hat. Ist diese gefunden, führt die Polynomdivsion $$p(x) : (x-x_0) = :g(x)$$ auf ein quadratisches Polynom $$g$$.</div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">Man berechne nun weitere Nullstellen von $$p$$ als Nullstellen von $$g$$.</div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"> </div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">Man gebe alle reellen Nullstellen von $$p$$ exakt und ohne zu runden als Menge $$M$$ an, d.h. als durch Komma getrennte Werte in geschweiften Klammern:</div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"><em>Beispiel: Die korrekte Schreibweise der Menge \( \{ 1, 3, 8\} \) ist { 1, 3, 8}. Durch Klick auf das ? kann die Schreibweise zunächst auf Korrektheit überprüft werden.<br /></em></div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"> </div><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021">$$M = $$ <textEntryInteraction responseIdentifier="RESPONSE_1410012695530" expectedLength="8" class="maxima-formula show-latex" /></div><p> </p><div dir="ltr" style="font-size: 13.2835px; font-family: sans-serif; left: 107.72px; top: 472.933px; transform: rotate(0deg) scale(0.996632, 1); transform-origin: 0% 0% 0px;" data-angle="0" data-font-name="g_font_9_0" data-canvas-width="309.9524353973021"><em> </em></div><p> </p><p> </p><p> </p><p> </p></itemBody><responseProcessing><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1410012695530" /><correct identifier="RESPONSE_1410012695530" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">4</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1410012695530" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><not><match><variable identifier="FEEDBACKBASIC" /><baseValue baseType="identifier">empty</baseValue></match></not><equal toleranceMode="exact"><variable identifier="SCORE" /><variable identifier="MAXSCORE" /></equal></and><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">correct</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><match><baseValue baseType="identifier">incorrect</baseValue><variable identifier="FEEDBACKBASIC" /></match></and><setOutcomeValue identifier="FEEDBACKMODAL"><multiple><variable identifier="FEEDBACKMODAL" /><baseValue baseType="identifier">Feedback1657413170</baseValue></multiple></setOutcomeValue></responseIf></responseCondition></responseProcessing><modalFeedback  identifier="Feedback1657413170" outcomeIdentifier="FEEDBACKMODAL" showHide="show" /></assessmentItem>

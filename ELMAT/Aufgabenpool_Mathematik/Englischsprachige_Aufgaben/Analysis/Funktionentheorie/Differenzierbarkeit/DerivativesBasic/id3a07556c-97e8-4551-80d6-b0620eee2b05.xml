<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/qti/qtiv2p1/imsqti_v2p1p1.xsd http://www.w3.org/1998/Math/MathML http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" identifier="id3a07556c-97e8-4551-80d6-b0620eee2b05" title="DerivativesBasic" adaptive="false" timeDependent="false"><responseDeclaration identifier="RESPONSE_1414767949627" cardinality="single" baseType="string" /><responseDeclaration identifier="RESPONSE_1414768421754" cardinality="single" baseType="string" /><responseDeclaration identifier="RESPONSE_1414768445757" cardinality="single" baseType="string" /><responseDeclaration identifier="RESPONSE_1414768467051" cardinality="single" baseType="string" /><outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float"><defaultValue><value>0</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="MAXSCORE" cardinality="single" baseType="float"><defaultValue><value>4</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKBASIC" cardinality="single" baseType="identifier" view="testConstructor"><defaultValue><value>empty</value></defaultValue></outcomeDeclaration><templateDeclaration identifier="a" cardinality="single" baseType="integer" /><templateDeclaration identifier="b" cardinality="single" baseType="integer" /><templateDeclaration identifier="k1" cardinality="single" baseType="integer" /><templateDeclaration identifier="c" cardinality="single" baseType="integer" /><templateDeclaration identifier="d" cardinality="single" baseType="integer" /><templateDeclaration identifier="k2" cardinality="single" baseType="integer" /><templateDeclaration identifier="k" cardinality="single" baseType="integer" /><templateDeclaration identifier="k-1" cardinality="single" baseType="integer" /><templateDeclaration identifier="k1-1" cardinality="single" baseType="integer" /><templateDeclaration identifier="k2-1" cardinality="single" baseType="integer" /><templateDeclaration identifier="-k2d" cardinality="single" baseType="integer" /><templateDeclaration identifier="2b" cardinality="single" baseType="integer" /><templateDeclaration identifier="2c" cardinality="single" baseType="integer" /><templateProcessing><setTemplateValue identifier="a"><randomInteger min="-7" max="6" /></setTemplateValue><setTemplateValue identifier="b"><randomInteger min="1" max="8" /></setTemplateValue><setTemplateValue identifier="k1"><randomInteger min="2" max="7" /></setTemplateValue><setTemplateValue identifier="c"><randomInteger min="-5" max="10" /></setTemplateValue><setTemplateValue identifier="d"><randomInteger min="1" max="7" /></setTemplateValue><setTemplateValue identifier="k2"><randomInteger min="2" max="5" /></setTemplateValue><setTemplateValue identifier="k"><randomInteger min="2" max="7" /></setTemplateValue><setTemplateValue identifier="k-1"><customOperator definition="MAXIMA" value="float($(1)-1);"><variable identifier="k" /></customOperator></setTemplateValue><setTemplateValue identifier="k1-1"><customOperator definition="MAXIMA" value="float($(1)-1);"><variable identifier="k1" /></customOperator></setTemplateValue><setTemplateValue identifier="k2-1"><customOperator definition="MAXIMA" value="float($(1)-1);"><variable identifier="k2" /></customOperator></setTemplateValue><templateCondition><templateIf><match><variable identifier="c" /><baseValue baseType="integer">0</baseValue></match><setTemplateValue identifier="c"><customOperator definition="MAXIMA" value="float(2);" /></setTemplateValue></templateIf></templateCondition><templateCondition><templateIf><match><variable identifier="a" /><baseValue baseType="integer">0</baseValue></match><setTemplateValue identifier="a"><customOperator definition="MAXIMA" value="float(2);" /></setTemplateValue></templateIf></templateCondition><setTemplateValue identifier="-k2d"><customOperator definition="MAXIMA" value="float(-$(1)*$(2));"><variable identifier="k2" /><variable identifier="d" /></customOperator></setTemplateValue><setTemplateValue identifier="2b"><customOperator definition="MAXIMA" value="float(2*$(1));"><variable identifier="b" /></customOperator></setTemplateValue><setTemplateValue identifier="2c"><customOperator definition="MAXIMA" value="float(-2*$(1));"><variable identifier="c" /></customOperator></setTemplateValue><setCorrectResponse identifier="RESPONSE_1414767949627"><customOperator definition="VARIABLESTRING" value="$(3)*($(1)-$(2)*%i)*z^$(6)+$(4)*%i*z^$(5)"><variable identifier="a" /><variable identifier="b" /><variable identifier="k1" /><variable identifier="k" /><variable identifier="k-1" /><variable identifier="k1-1" /></customOperator></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1414768421754"><customOperator definition="VARIABLESTRING" value="$(4)*%i*($(1)-$(2)*%i*z)^$(3)"><variable identifier="a" /><variable identifier="d" /><variable identifier="k2-1" /><variable identifier="-k2d" /></customOperator></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1414768445757"><customOperator definition="VARIABLESTRING" value="$(2)*z*%e^($(1)-%i*z^2)"><variable identifier="c" /><variable identifier="2b" /></customOperator></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1414768467051"><customOperator definition="VARIABLESTRING" value="$(3)*z^2*cos(%i*z^2+$(2))+$(1)*%i*sin(%i*z^2+$(2))"><variable identifier="c" /><variable identifier="k" /><variable identifier="2c" /></customOperator></setCorrectResponse></templateProcessing><itemBody ><p><p>Compute and enter the derivatives<strong> \( \bf f'(z) \) </strong>of the given complex functions<strong> \( \bf f(z) \):</strong></p><p> </p><table border="1" width="70%"><tbody><tr><td>                   If       \( \bf f(z) \)</td><td>then </td><td>          \( \bf f'(z) \)   </td></tr><tr><td>\( \bf (<printedVariable identifier="a" /> - <printedVariable identifier="b" />\cdot i)\cdot  z^<printedVariable identifier="k1" /> + i\cdot z^<printedVariable identifier="k" /> - 2+ <printedVariable identifier="d" />\cdot i \)</td><td> </td><td><textEntryInteraction responseIdentifier="RESPONSE_1414767949627" expectedLength="25" class="maxima-formula show-latex show-syntax-error" /></td></tr><tr><td>\(\bf  (<printedVariable identifier="a" />-<printedVariable identifier="d" /> \cdot i \cdot z)^<printedVariable identifier="k2" /> \)</td><td> </td><td><textEntryInteraction responseIdentifier="RESPONSE_1414768421754" expectedLength="25" class="maxima-formula show-latex show-syntax-error" /></td></tr><tr><td> \(\bf <printedVariable identifier="b" /> \cdot i\cdot e^{<printedVariable identifier="c" />-i\cdot z^2}\)</td><td> </td><td><textEntryInteraction responseIdentifier="RESPONSE_1414768445757" expectedLength="25" class="maxima-formula show-latex show-syntax-error" /></td></tr><tr><td>\(\bf <printedVariable identifier="c" /> \cdot i \cdot sin(i \cdot z^2+<printedVariable identifier="k" />)\cdot z\)</td><td> </td><td><textEntryInteraction responseIdentifier="RESPONSE_1414768467051" expectedLength="40" class="maxima-formula show-latex show-syntax-error" /></td></tr></tbody></table><p> Input syntax:</p><p><strong>%i</strong> for the complex imaginary unit i</p><p><strong>*</strong> for any multiplikation</p><p><strong>%e</strong> forEuler's number e</p><p><strong>^</strong>    for power</p><p>Example: The function \(\bf  (2+3 \dot i) e^{z^2 \cdot i} \) is to be entered as:<strong> (2+3*%i)*%e^(z^2*%i)</strong></p></p></itemBody><responseProcessing><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1414767949627" /><correct identifier="RESPONSE_1414767949627" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">1</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1414767949627" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1414768421754" /><correct identifier="RESPONSE_1414768421754" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">1</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1414768421754" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1414768445757" /><correct identifier="RESPONSE_1414768445757" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">1</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1414768445757" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><customOperator definition="MAXIMA" value="is(equal(ev($(1)),ev($(2))));"><variable identifier="RESPONSE_1414768467051" /><correct identifier="RESPONSE_1414768467051" /></customOperator><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">1</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1414768467051" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><not><match><variable identifier="FEEDBACKBASIC" /><baseValue baseType="identifier">empty</baseValue></match></not><equal toleranceMode="exact"><variable identifier="SCORE" /><variable identifier="MAXSCORE" /></equal></and><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">correct</baseValue></setOutcomeValue></responseIf></responseCondition></responseProcessing></assessmentItem>

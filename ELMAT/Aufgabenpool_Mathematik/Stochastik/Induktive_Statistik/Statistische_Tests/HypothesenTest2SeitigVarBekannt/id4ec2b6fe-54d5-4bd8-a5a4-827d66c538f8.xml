<?xml version="1.0" encoding="UTF-8"?>
<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p1 http://www.imsglobal.org/xsd/qti/qtiv2p1/imsqti_v2p1p1.xsd http://www.w3.org/1998/Math/MathML http://www.w3.org/Math/XMLSchema/mathml2/mathml2.xsd" identifier="id4ec2b6fe-54d5-4bd8-a5a4-827d66c538f8" title="HypothesenTest2SeitigVarBekannt" adaptive="false" timeDependent="false"><responseDeclaration identifier="RESPONSE_1403787205150" cardinality="single" baseType="float"><correctResponse><value>0</value></correctResponse></responseDeclaration><responseDeclaration identifier="RESPONSE_1403787252270" cardinality="single" baseType="float"><correctResponse><value>0</value></correctResponse></responseDeclaration><responseDeclaration identifier="RESPONSE_1403787362331" cardinality="single" baseType="float"><correctResponse><value>0</value></correctResponse></responseDeclaration><outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float"><defaultValue><value>0</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="MAXSCORE" cardinality="single" baseType="float"><defaultValue><value>6</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKBASIC" cardinality="single" baseType="identifier" view="testConstructor"><defaultValue><value>empty</value></defaultValue></outcomeDeclaration><outcomeDeclaration identifier="FEEDBACKMODAL" cardinality="multiple" baseType="identifier" view="testConstructor" /><templateDeclaration identifier="distribdummy" cardinality="single" baseType="integer" /><templateDeclaration identifier="u" cardinality="single" baseType="integer" /><templateDeclaration identifier="d" cardinality="single" baseType="float" /><templateDeclaration identifier="y" cardinality="single" baseType="float" /><templateDeclaration identifier="a" cardinality="single" baseType="float" /><templateDeclaration identifier="n" cardinality="single" baseType="integer" /><templateDeclaration identifier="uhut" cardinality="single" baseType="float" /><templateDeclaration identifier="c" cardinality="single" baseType="float" /><templateDeclaration identifier="test" cardinality="single" baseType="float" /><templateDeclaration identifier="H0" cardinality="single" baseType="integer" /><templateProcessing><setTemplateValue identifier="distribdummy"><customOperator definition="MAXIMA" value="float(load(distrib));" /></setTemplateValue><setTemplateValue identifier="u"><random><multiple><baseValue baseType="integer">8</baseValue><baseValue baseType="integer">9</baseValue><baseValue baseType="integer">10</baseValue><baseValue baseType="integer">11</baseValue><baseValue baseType="integer">12</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="d"><random><multiple><baseValue baseType="float">0.4</baseValue><baseValue baseType="float">0.5</baseValue><baseValue baseType="float">0.6</baseValue><baseValue baseType="float">0.3</baseValue><baseValue baseType="float">0.2</baseValue><baseValue baseType="float">0.1</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="y"><customOperator definition="MAXIMA" value="float($(1)-0.1);"><variable identifier="u" /></customOperator></setTemplateValue><setTemplateValue identifier="a"><random><multiple><baseValue baseType="float">0.01</baseValue><baseValue baseType="float">0.05</baseValue><baseValue baseType="float">0.005</baseValue><baseValue baseType="float">0.001</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="n"><random><multiple><baseValue baseType="integer">64</baseValue><baseValue baseType="integer">90</baseValue><baseValue baseType="integer">120</baseValue><baseValue baseType="integer">150</baseValue><baseValue baseType="integer">200</baseValue></multiple></random></setTemplateValue><setTemplateValue identifier="uhut"><customOperator definition="MAXIMA" value="float(($(1)-$(2))*sqrt($(3))/$(4));"><variable identifier="y" /><variable identifier="u" /><variable identifier="n" /><variable identifier="d" /></customOperator></setTemplateValue><setTemplateValue identifier="c"><customOperator definition="MAXIMA" value="float(quantile_normal(float(1-$(1)/2),0,1))"><variable identifier="a" /></customOperator></setTemplateValue><setTemplateValue identifier="test"><customOperator definition="MAXIMA" value="float($(1)-abs($(2)));"><variable identifier="c" /><variable identifier="uhut" /></customOperator></setTemplateValue><setTemplateValue identifier="H0"><randomInteger min="1" max="1" step="0" /></setTemplateValue><templateCondition><templateIf><lt><variable identifier="test" /><baseValue baseType="integer">0</baseValue></lt><setTemplateValue identifier="H0"><randomInteger min="0" max="0" step="0" /></setTemplateValue></templateIf></templateCondition><setCorrectResponse identifier="RESPONSE_1403787205150"><variable identifier="uhut" /></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1403787252270"><variable identifier="c" /></setCorrectResponse><setCorrectResponse identifier="RESPONSE_1403787362331"><variable identifier="H0" /></setCorrectResponse></templateProcessing><itemBody ><p><p>Eine Verpackungsmaschine produziert einen Pappstift der nach Angaben des Betreibers eine Sollänge von \(\mu_0 = <printedVariable identifier="u" />\) cm haben soll. Es ist bekannt, dass die Längen normalverteilt sind mit einer Varianz von \( \sigma ^2 = <printedVariable identifier="d" />^2 \ cm^2\). Die Produktion soll gestoppt werden, wenn die mittlere Länge der tatsächlich produzierten Stifte von der Solllänge abweicht. Zur Überprüfung wurde eine Stichprobe von n = <printedVariable identifier="n" /> genommen. Es ergab sich ein Stichprobenmittel von \(\overline{x} = <printedVariable identifier="y" />\)</p><p style="-qt-paragraph-type: empty; -qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Testen Sie die Hypothese \(H_0: \mu = \mu_0\) gegen \(H_A: \mu \neq \mu_0\) mit der Irrtumswahrscheinlichkeit \(\alpha = <printedVariable identifier="a" />.\)</p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Berechnen Sie die Prüfgröße \(\hat u\) = <textEntryInteraction responseIdentifier="RESPONSE_1403787205150" /></p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Berechnen Sie den kritischen Wert c = <textEntryInteraction responseIdentifier="RESPONSE_1403787252270" /></p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Tragen Sie in diese Lücke  <textEntryInteraction responseIdentifier="RESPONSE_1403787362331" /> eine Eins an wenn Sie \(H_0\) nicht verwerfen. Tragen Sie eine 0 ein wenn Sie stattdessen \(H_A\) annehmen.</p><p> </p><p> </p></p></itemBody><responseProcessing><responseCondition><responseIf><equal toleranceMode="absolute" tolerance="0.1 0.1" includeLowerBound="true" includeUpperBound="true"><variable identifier="RESPONSE_1403787205150" /><correct identifier="RESPONSE_1403787205150" /></equal><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">2</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1403787205150" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><equal toleranceMode="absolute" tolerance="0.01 0.01" includeLowerBound="true" includeUpperBound="true"><variable identifier="RESPONSE_1403787252270" /><correct identifier="RESPONSE_1403787252270" /></equal><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">2</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1403787252270" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><equal toleranceMode="exact"><variable identifier="RESPONSE_1403787362331" /><correct identifier="RESPONSE_1403787362331" /></equal><setOutcomeValue identifier="SCORE"><sum><variable identifier="SCORE" /><baseValue baseType="float">2</baseValue></sum></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><not><isNull><variable identifier="RESPONSE_1403787362331" /></isNull></not><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">incorrect</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><not><match><variable identifier="FEEDBACKBASIC" /><baseValue baseType="identifier">empty</baseValue></match></not><equal toleranceMode="exact"><variable identifier="SCORE" /><variable identifier="MAXSCORE" /></equal></and><setOutcomeValue identifier="FEEDBACKBASIC"><baseValue baseType="identifier">correct</baseValue></setOutcomeValue></responseIf></responseCondition><responseCondition><responseIf><and><match><baseValue baseType="identifier">incorrect</baseValue><variable identifier="FEEDBACKBASIC" /></match></and><setOutcomeValue identifier="FEEDBACKMODAL"><multiple><variable identifier="FEEDBACKMODAL" /><baseValue baseType="identifier">Feedback246515859</baseValue></multiple></setOutcomeValue></responseIf></responseCondition></responseProcessing><modalFeedback  identifier="Feedback246515859" outcomeIdentifier="FEEDBACKMODAL" showHide="show"><p>Wegen \( P(-c \le U \le c) = 1- \alpha  \leftrightarrow 2P(U\le c) -1 = 1- \alpha\) berechnen wir den kritischen Wert c = Standardnormalquantil zu \( 1-\frac{\alpha}{2} \) \\</p><p style="-qt-paragraph-type: empty; -qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Dann berechnet man die Prüfgröße \[\hat u = \frac{ \overline{x} - \mu_0 }{\sigma}\cdot \sqrt<printedVariable identifier="n" />  \]</p><p style="-qt-paragraph-type: empty; -qt-block-indent: 0; text-indent: 0px; margin: 0px;"> </p><p style="-qt-block-indent: 0; text-indent: 0px; margin: 0px;">Falls gilt \(|\hat u| &gt; c \) wird \(H_0\) abgelehnt und die Produktion wird gestoppt.</p></modalFeedback></assessmentItem>
